{"version":3,"sources":["components/GameList.js","actions/index.js","components/GameCard.js","components/NavBar.js","components/Like.js","components/LikeInput.js","containers/SelectedGamesContainer.js","containers/GamesContainer.js","components/Home.js","App.js","reducers/index.js","index.js"],"names":["GameList","props","react_default","a","createElement","className","Header","as","textAlign","games","map","game","key","id","Card","Group","centered","itemsPerRow","Content","react_router_dom","to","concat","name","Image","src","cover","image_id","fluid","Description","summary","Button","color","href","increaseLike","like","dispatch","axios","post","headers","Content-Type","game_id","JSON","stringify","like_count","then","response","type","data","console","log","getLikes","get","GameCard","Divider","screenshots","sc","Rating","icon","defaultRating","maxRating","parseInt","aggregated_rating","platforms","p","abbreviation","genres","g","NavBar","activeStyle","Icon","size","Like","likes","filter","e","gameId","reduce","sum","value","LikeInput","this","state","inverted","onClick","basic","components_Like","Component","connect","SelectedGamesContainer","handleOnClick","event","preventDefault","_this","_this2","setGame","find","match","params","components_GameCard","components_LikeInput","withRouter","fetch","json","responseJson","GamesContainer","fetchGames","components_GameList","Home","App","components_NavBar","react_router","exact","path","component","React","cuid","persistConfig","storage","blacklist","persistedReducer","persistReducer","arguments","length","undefined","action","Object","objectSpread","loading","store","createStore","composeWithDevTools","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","es","integration_react","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f5180874.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Card, Image, Header } from \"semantic-ui-react\";\n\nconst GameList = props => {\n  return (\n    <div className=\"container\">\n      <Header as=\"h1\" textAlign=\"center\">\n        ALL GAMES\n      </Header>\n      {props.games.map(game => (\n        <div className=\"card-deck\" key={game.id}>\n          <Card.Group centered itemsPerRow=\"3\">\n            <Card>\n              <Card.Content>\n                <Card.Header>\n                  <Link key={game.id} to={`/games/${game.id}`}>\n                    {game.name}\n                  </Link>\n                </Card.Header>\n                <Image\n                  src={`https://images.igdb.com/igdb/image/upload/t_1080p/${\n                    game.cover.image_id\n                  }.jpg`}\n                  fluid\n                />\n                <Card.Description>{game.summary}</Card.Description>\n                <br />\n                <Button\n                  fluid\n                  color=\"blue\"\n                  key={game.id}\n                  href={`/games/${game.id}`}\n                >\n                  Game Details\n                </Button>\n              </Card.Content>\n            </Card>\n          </Card.Group>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default GameList;\n","import axios from \"axios\";\n\nexport function fetchGames() {\n  return dispatch => {\n    dispatch({ type: \"LOADING_GAMES\" });\n    return fetch(\"/api/games\")\n      .then(response => response.json())\n      .then(responseJson => {\n        dispatch({ type: \"FETCH_GAMES\", games: responseJson });\n      });\n  };\n}\n\nexport function fetchRPGGames() {\n  return dispatch => {\n    dispatch({ type: \"LOADING_GAMES\" });\n    return fetch(\"/api/rpg\")\n      .then(response => response.json())\n      .then(responseJson => {\n        dispatch({ type: \"FETCH_GAMES\", games: responseJson });\n      });\n  };\n}\n\nexport function increaseLike(like) {\n  return dispatch => {\n    axios\n      .post(\"/api/likes\", {\n        headers: { \"Content-Type\": \"application/json\" },\n        like: {\n          game_id: JSON.stringify(like.game_id),\n          like_count: 1\n        }\n      })\n      .then(response => {\n        dispatch({ type: \"ADD_LIKE\", like: response.data });\n        console.log(response);\n      });\n  };\n}\n\nexport function getLikes() {\n  return dispatch => {\n    axios.get(\"/api/likes/\").then(response => {\n      dispatch({ type: \"GET_LIKES\", like: response.data });\n    });\n  };\n}\n// setGame = () => {\n//   const selectedGameId = parseInt(this.props.match.params.gameId);\n//   const selectedGame = this.props.games.find(\n//     game => game.id === selectedGameId\n//   );\n//   this.setState({\n//     game: selectedGame\n//   });\n// };\n\nexport function setGame(game) {\n  return dispatch => {\n    dispatch({ type: \"LOADING_GAMES\" });\n    return fetch(\"/api/games\")\n      .then(response => response.json())\n      .then(responseJson => {\n        dispatch({ type: \"SET_GAME\", game: game, games: responseJson });\n      });\n    // .then(responseJson => {\n    //   dispatch({ type: \"SET_GAME\", game: game });\n    // });\n  };\n}\n","import React from \"react\";\nimport { Image, Header, Rating } from \"semantic-ui-react\";\nimport { Divider } from \"semantic-ui-react\";\n\nconst GameCard = props => {\n  return (\n    <div className=\"container\">\n      <Header as=\"h1\" textAlign=\"center\">\n        {props.game.name}\n      </Header>\n\n      <Image\n        src={`https://images.igdb.com/igdb/image/upload/t_cover_big/${\n          props.cover.image_id\n        }.jpg`}\n        centered\n      />\n      <Divider />\n      <br />\n      {props.screenshots.map((sc, id) => (\n        <div key={id}>\n          <Image\n            centered\n            src={`https://images.igdb.com/igdb/image/upload/t_screenshot_med/${\n              sc.image_id\n            }.jpg`}\n          />\n        </div>\n      ))}\n      <Divider />\n      <div>\n        Rating: <Rating icon=\"star\" defaultRating={3} maxRating={5} />{\" \"}\n        {parseInt(props.game.aggregated_rating)}/100\n        <br />\n        Platforms:{\" \"}\n        {props.platforms.map((p, id) => (\n          <span key={id}>{p.abbreviation} </span>\n        )) || []}\n        <br />\n        Genre:{\" \"}\n        {props.genres.map((g, id) => (\n          <span key={id}>{g.name} </span>\n        ))}\n        <Divider />\n        {props.game.summary}\n        <br />\n      </div>\n      <Divider />\n    </div>\n  );\n};\n\nexport default GameCard;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"../index.css\";\nimport { Icon } from \"semantic-ui-react\";\n\nconst NavBar = () => {\n  return (\n    <div className=\"navbar\">\n      <NavLink\n        to=\"/\"\n        activeStyle={{\n          color: \"gray\"\n        }}\n      >\n        <Icon name=\"home\" size=\"small\" /> Home\n      </NavLink>\n    </div>\n  );\n};\n\nexport default NavBar;\n","const Like = props => {\n  return props.likes\n    .filter(e => e.game_id === props.gameId)\n    .map(e => e.like_count)\n    .reduce((sum, value) => sum + value, 0);\n};\n\nexport default Like;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, Icon } from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport Like from \"./Like\";\nimport { increaseLike } from \"../actions/index\";\nimport { getLikes } from \"../actions/index\";\n\nclass LikeInput extends Component {\n  // getLikes() {\n  //   axios.get(\"/api/likes/\").then(response => {\n  //     this.setState({ like: response.data });\n  //   });\n  // }\n\n  componentDidMount() {\n    this.props.getLikes();\n  }\n\n  render() {\n    console.log(this.state);\n    return (\n      <div className=\"ui buttons\">\n        <Button inverted color=\"red\" onClick={this.props.onClick}>\n          <Icon name=\"heart\" />\n          Like\n        </Button>\n        <Button basic color=\"red\">\n          <div>\n            <Like\n              likes={this.props.like || []}\n              gameId={this.props.gameId || []}\n            />\n          </div>\n        </Button>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    like: state.like\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    increaseLike: like => {\n      dispatch(increaseLike(like));\n    },\n    getLikes: () => {\n      dispatch(getLikes());\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LikeInput);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport GameCard from \"../components/GameCard\";\nimport { fetchGames } from \"../actions/index\";\nimport { getLikes } from \"../actions/index\";\nimport NavBar from \"../components/NavBar\";\nimport LikeInput from \"../components/LikeInput\";\nimport { withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { setGame } from \"../actions/index\";\nimport { increaseLike } from \"../actions/index\";\nimport { Button, Icon } from \"semantic-ui-react\";\nimport Like from \"../components/Like\";\n\nclass SelectedGamesContainer extends Component {\n  static propTypes = {\n    match: PropTypes.object.isRequired,\n    location: PropTypes.object.isRequired,\n    history: PropTypes.object.isRequired\n  };\n\n  componentDidMount() {\n    // const selectedGameId = parseInt(this.props.match.params.gameId);\n    // const selectedGame = this.props.games.find(\n    //   game => game.id === selectedGameId\n    // );\n\n    this.props.setGame({\n      game: this.props.games.find(\n        game => game.id === parseInt(this.props.match.params.gameId)\n      )\n    });\n  }\n\n  handleOnClick = event => {\n    event.preventDefault();\n    this.props.increaseLike({\n      game_id: this.props.game.game.id,\n      like_count: 1\n    });\n  };\n\n  // setGame = () => {\n  //   const selectedGameId = parseInt(this.props.match.params.gameId);\n  //   const selectedGame = this.props.games.find(\n  //     game => game.id === selectedGameId\n  //   );\n  //   this.setState({\n  //     game: selectedGame\n  //   });\n  // };\n\n  // componentDidUpdate(prevProps) {\n  //   if (this.props.like !== prevProps.like) {\n  //     this.props.getLikes();\n  //   }\n  // }\n  // getGame = () => {\n  //   const selectedGameId = parseInt(this.props.match.params.gameId);\n\n  //   const selectedGame = this.props.games.find(\n  //     game => game.id === selectedGameId\n  //   );\n  // };\n\n  render() {\n    return (\n      <div>\n        <GameCard\n          game={this.props.game.game || []}\n          cover={this.props.game.game.cover || []}\n          platforms={this.props.game.game.platforms || []}\n          screenshots={this.props.game.game.screenshots || []}\n          genres={this.props.game.game.genres || []}\n        />\n        <LikeInput\n          game={this.props.game.game}\n          gameId={this.props.game.game.id}\n          onClick={this.handleOnClick}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    games: state.games,\n    game: state.game,\n    like: state.like\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getLikes: () => {\n      dispatch(getLikes());\n    },\n    setGame: game => {\n      dispatch(setGame(game));\n    },\n    increaseLike: like => {\n      dispatch(increaseLike(like));\n    }\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(SelectedGamesContainer)\n);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport GameList from \"../components/GameList\";\nimport { fetchGames } from \"../actions/index\";\nimport { Route } from \"react-router-dom\";\nimport SelectedGamesContainer from \"./SelectedGamesContainer\";\nimport { Link } from \"react-router-dom\";\n\nclass GamesContainer extends Component {\n  componentDidMount() {\n    this.props.fetchGames();\n  }\n\n  render() {\n    return (\n      <div>\n        <GameList games={this.props.games} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return { games: state.games };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchGames: () => {\n      dispatch(fetchGames());\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(GamesContainer);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../index.css\";\n\nconst Home = () => {\n  return (\n    <div className=\"wrapper\">\n      <div className=\"home-container\">\n        <p>Select a genre</p>\n        <Link to=\"/all\">\n          <button className=\"css-button\">All genres</button>\n        </Link>\n        <button className=\"css-button\">RPG (WIP)</button>\n        <button className=\"css-button\">WIP</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport GamesContainer from \"./containers/GamesContainer\";\nimport SelectedGamesContainer from \"./containers/SelectedGamesContainer\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport NavBar from \"./components/NavBar\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <NavBar />\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/all\" component={GamesContainer} />\n          <Route path=\"/games/:gameId\" component={SelectedGamesContainer} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import cuid from \"cuid\";\nexport const cuidFn = cuid;\n\nexport default function rootReducer(\n  state = {\n    games: [],\n    game: [],\n    like: []\n  },\n  action\n) {\n  switch (action.type) {\n    case \"LOADING_GAMES\":\n      return { ...state, loading: true };\n    case \"FETCH_GAMES\":\n      return { ...state, games: action.games };\n    case \"SET_GAME\":\n      return {\n        ...state,\n        games: action.games,\n\n        like: state.like,\n        ...state,\n        game: action.game\n      };\n    case \"ADD_LIKE\":\n      return {\n        ...state,\n        game_id: action.game_id,\n        like_count: action.like_count\n      };\n    case \"GET_LIKES\":\n      return {\n        ...state,\n        like: action.like\n      };\n\n    default:\n      return state;\n  }\n}\n// setGame = () => {\n//   const selectedGameId = parseInt(this.props.match.params.gameId);\n//   const selectedGame = this.props.games.find(\n//     game => game.id === selectedGameId\n//   );\n//   this.setState({\n//     game: selectedGame\n//   });\n// };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport App from \"./App\";\nimport GamesContainer from \"./containers/GamesContainer\";\nimport SelectedGamesContainer from \"./containers/SelectedGamesContainer\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"./reducers/index\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage: storage,\n  blacklist: [\"\"]\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = createStore(\n  persistedReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nconst persistor = persistStore(store);\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <Router>\n        <App />\n      </Router>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}